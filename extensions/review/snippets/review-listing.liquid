<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <style>
      .review-slider-container {
        padding: 30px 10px;
        position: relative;
        max-width: 1200px;
        margin: auto;
      }
      .review-header-main {
        padding-bottom: 30px;
      }
      #dynamic-reviews {
        opacity: 0;
        transition: opacity 0.3s ease;
      }
      #dynamic-reviews.loaded {
        opacity: 1;
      }
      .review-list {
        padding: 24px;
        border-top: 1px solid #8080802b;
        border-bottom: 1px solid #8080802b;
      }
      .Date {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .review-card {
        border-radius: 18px;
        text-align: left;
        transition: transform 0.3s ease, box-shadow 0.3s ease, opacity 0.3s ease;
        opacity: 1;
        transform: scale(1);
      }
      .review-author {
        font-size: 21px;
        font-weight: 600;
        color: #333;
        margin: 0;
      }
      .review-text {
        margin: 12px 0px;
        color: #555;
        font-size: 15px;
        line-height: 1.6;
      }
      .review-rating {
        color: #ff9d2d;
        font-size: 21px;
        letter-spacing: 2px;
      }
      .loading-spinner {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 200px;
      }
      .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f3f3;
        border-top: 4px solid #ff9d2d;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }
      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
      .hidden {
        display: none;
      }
      .error-message {
        text-align: center;
        color: #666;
        padding: 40px;
        font-style: italic;
      }
      .view-more-container {
        text-align: center;
        margin-top: 30px;
        padding: 20px;
      }
      .view-more-btn,
      .view-less-btn {
        background-color: #000000;
        color: #ffffff;
        border: 1px solid;
        border-radius: 50px;
        padding: 10px 15px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
      }
      .view-more-btn:hover,
      .view-less-btn:hover {
        color: black;
        background-color: white;
      }
      @media (max-width: 768px) {
        .review-card {
          padding: 20px;
          margin: 0 5px 20px 5px;
        }

        .review-author {
          font-size: 18px;
        }

        .review-text {
          font-size: 14px;
        }

        .view-more-btn,
        .view-less-btn {
          padding: 10px 25px;
          font-size: 14px;
          margin: 5px;
        }
      }
    </style>
  </head>

  <body>
    <div class="review-slider-container">
      <div class="review-header-main" id="review-header">
        <h1 class="mainTitle" style="margin: 0; text-align:center;">What Our Customers Say</h1>
        <p class="main_subtitle" style="margin: 0; text-align:center;">
          Discover why our customers love our products and services
        </p>
      </div>

      <div class="review-slider" id="dynamic-reviews">
        <div>
          <div class="loading-spinner">
            <div class="spinner"></div>
          </div>
        </div>
      </div>

      <div class="view-more-container hidden" id="view-more-container">
        <button class="view-more-btn" id="view-more-btn">View More Reviews</button>
        <button class="view-less-btn hidden" id="view-less-btn">View Less</button>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js" defer></script>

    <script>
      $(document).ready(function () {
        const dynamicReviewsContainer = $('#dynamic-reviews');
        const reviewHeader = $('#review-header');
        const viewMoreContainer = $('#view-more-container');
        const viewMoreBtn = $('#view-more-btn');
        const viewLessBtn = $('#view-less-btn');

        let allReviews = [];
        let currentDisplayCount = 5;
        const reviewsPerPage = 5;
        const initialDisplayCount = 5;
        let reviewSettings = {};

        fetchReviews();
        fetchReviewSettings();

        async function fetchReviews() {
          try {
            const shopName = '{{ shop.metafields.shopName.shopName }}';
            const productId = '{{ product.id }}';
            const API_ENDPOINT = `https://checklist.codecrewinfotech.com/api/getReview/${shopName}/${productId}`;

            const response = await fetch(API_ENDPOINT, {
              method: 'GET',
              headers: {
                'ngrok-skip-browser-warning': true,
                'Content-Type': 'application/json',
              },
            });

            if (!response.ok) {
              throw new Error(`HTTP error! status: ${response.status}`);
            }

            const reviews = await response.json();

            if (!reviews || !reviews.reviews || reviews.reviews.length === 0) {
              reviewHeader.addClass('hidden');
              dynamicReviewsContainer.addClass('hidden');
              viewMoreContainer.addClass('hidden');
              return;
            }

            reviewHeader.removeClass('hidden');
            dynamicReviewsContainer.removeClass('hidden');

            allReviews = reviews.reviews;
            renderReviews();
            if (allReviews.length > 5) {
              viewMoreContainer.removeClass('hidden');
            }
          } catch (error) {
            console.error('Error fetching reviews:', error);
            dynamicReviewsContainer.html('<div class="error-message">Unable to load reviews at this time</div>');
            viewMoreContainer.addClass('hidden');
          }
        }

        async function fetchReviewSettings() {
          try {
            const shopName = '{{ shop.metafields.shopName.shopName }}';
            const API_ENDPOINT = `https://def94b3b3985.ngrok-free.app/api/reviewSettings/${shopName}`;

            const response = await fetch(API_ENDPOINT, {
              method: 'GET',
              headers: {
                Accept: 'application/json',
                'ngrok-skip-browser-warning': 'true',
              },
            });

            if (!response.ok) {
              throw new Error(`HTTP error! status: ${response.status}`);
            }

            const reviewSettingsResponse = await response.json();
            reviewSettings = reviewSettingsResponse.data || reviewSettingsResponse;
            console.log('Review Settings Data:', reviewSettings);

            applyDynamicStyling(reviewSettings);
          } catch (error) {
            console.error('Error fetching review settings:', error);
            applyDynamicStyling({});
          }
        }

        function applyDynamicStyling(data) {
          const titleMain = document.querySelector('.mainTitle');
          if (titleMain) {
            titleMain.textContent = data?.mainTitle || 'What Our Customers Say';
            if (data.titleFontSize) {
              titleMain.style.fontSize = data.titleFontSize;
            }
            if (data.textColor) {
              titleMain.style.color = data.textColor;
            }
          }

          // Fixed the config reference to use reviewSettings/data instead
          if (data.showOverallReviews === false) {
            const reviewsSummary = document.querySelector('.review-slider-container');
            if (reviewsSummary) {
              reviewsSummary.style.display = 'none';
            }
          }

          const subtitleMain = document.querySelector('.main_subtitle');
          if (subtitleMain) {
            subtitleMain.textContent =
              data?.mainSubtitle || 'Discover why our customers love our products and services';
            if (data.subTitleFontSize) {
              subtitleMain.style.fontSize = data.subTitleFontSize;
            }
            if (data.textColor) {
              subtitleMain.style.color = data.textColor;
            }
          }

          if (data.primaryColor) {
            const style = document.createElement('style');
            style.textContent = `
              .review-rating {
                color: ${data.primaryColor} !important;
              }
              .spinner {
                border-top-color: ${data.primaryColor} !important;
              }
            `;
            document.head.appendChild(style);
          }

          if (data.buttonBackground || data.writeButtonText || data.buttonText) {
            const buttonStyle = document.createElement('style');
            let buttonCSS = '';

            if (data.buttonBackground) {
              buttonCSS += `
                .view-more-btn,
                .view-less-btn {
                  background-color: ${data.buttonBackground} !important;
                }
              `;
            }

            if (data.writeButtonText) {
              buttonCSS += `
                .view-more-btn,
                .view-less-btn {
                  color: ${data.writeButtonText} !important;
                }
              `;
            }

            buttonStyle.textContent = buttonCSS;
            document.head.appendChild(buttonStyle);

            viewMoreBtn.text(data.buttonText || 'View More Reviews');
            viewLessBtn.text(data.writeButtonText || 'View Less');
          }

          if (data.borderRadius) {
            const radiusStyle = document.createElement('style');
            radiusStyle.textContent = `
              .review-card {
                border-radius: ${data.borderRadius}px !important;
              }
              .view-more-btn,
              .view-less-btn {
                border-radius: ${data.borderRadius}px !important;
              }
            `;
            document.head.appendChild(radiusStyle);
          }

          if (data.starSize || data.starSpacing) {
            const starStyle = document.createElement('style');
            let starCSS = '';

            if (data.starSize) {
              starCSS += `
                .review-rating {
                  font-size: ${data.starSize} !important;
                }
              `;
            }

            if (data.starSpacing) {
              starCSS += `
                .review-rating {
                  letter-spacing: ${data.starSpacing} !important;
                }
              `;
            }

            starStyle.textContent = starCSS;
            document.head.appendChild(starStyle);
          }

          if (data.textColor) {
            const textStyle = document.createElement('style');
            textStyle.textContent = `
              .review-author {
                color: ${data.textColor} !important;
              }
              .review-text {
                color: ${data.textColor} !important;
              }
            `;
            document.head.appendChild(textStyle);
          }
        }

        function renderReviews() {
          dynamicReviewsContainer.html('');

          let reviewsHtml = '';
          const reviewsToShow = allReviews.slice(0, currentDisplayCount);

          reviewsToShow.forEach((review) => {
            const stars = '★'.repeat(review.rating || 0) + '☆'.repeat(5 - (review.rating || 0));

            const date = new Date(review.createdAt);
            const formattedDate = `${String(date.getDate()).padStart(2, '0')}/${String(date.getMonth() + 1).padStart(
              2,
              '0'
            )}/${date.getFullYear()}`;

            reviewsHtml += `
              <div class="review-list">
              <div class="review-card">
                  <div class="Date">
                  <h3 class="review-author">${review.name || 'Anonymous'}</h3>
                  <div>
                      <h3 class="review-date">${formattedDate}</h3>
                  </div>
                  </div>
              </div>
              <div class="review-rating">${stars}</div>
              <p class="review-text">${review.reviewText || 'No comment provided'}</p>
              </div>
            `;
          });

          dynamicReviewsContainer.html(reviewsHtml);
          dynamicReviewsContainer.addClass('loaded');

          if (currentDisplayCount >= allReviews.length) {
            viewMoreBtn.addClass('hidden');
          } else {
            viewMoreBtn.removeClass('hidden');
          }

          if (currentDisplayCount > initialDisplayCount) {
            viewLessBtn.removeClass('hidden');
          } else {
            viewLessBtn.addClass('hidden');
          }

          if (allReviews.length > initialDisplayCount) {
            viewMoreContainer.removeClass('hidden');
          } else {
            viewMoreContainer.addClass('hidden');
          }
        }

        viewMoreBtn.on('click', function () {
          currentDisplayCount += reviewsPerPage;
          renderReviews();
        });

        viewLessBtn.on('click', function () {
          currentDisplayCount = initialDisplayCount;
          renderReviews();
        });
      });
    </script>
  </body>
</html>
