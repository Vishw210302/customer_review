<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fixed Review List</title>
    
    <style>
        .review-slider-container {
            padding: 30px 10px;
            position: relative;
            max-width: 1200px;
            margin: auto;
        }
        
        .review-header-main {
            padding-bottom: 30px;
        }
        
        #dynamic-reviews {
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        #dynamic-reviews.loaded {
            opacity: 1;
        }
        .review-list{
           padding: 24px;
    border-top: 1px solid #8080802b;
    border-bottom: 1px solid #8080802b;
        }
        .Date{
          display: flex;
    justify-content: space-between;
    align-items: self-start;    
        }
        
        .review-card {
            background-color: white;
            border-radius: 18px;
           
            text-align: left;
            transition: transform 0.3s ease, box-shadow 0.3s ease, opacity 0.3s ease;
            opacity: 1;
            transform: scale(1);
                      
           
        }

        .review-author {
            font-size: 21px;
            font-weight: 600;
            color: #333;
            margin: 0;
        }

        .review-text {
           margin: 12px 0px;
            color: #555;
            font-size: 15px;
            line-height: 1.6;
          
        }

        .review-rating {
            color: #ff9d2d;
            font-size: 21px;
            letter-spacing: 2px;
        }

        /* Loading spinner */
        .loading-spinner {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 200px;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #ff9d2d;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .hidden {
            display: none;
        }

        .error-message {
            text-align: center;
            color: #666;
            padding: 40px;
            font-style: italic;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .review-card {
                padding: 20px;
                margin: 0 5px 20px 5px;
            }
            
            .review-author {
                font-size: 18px;
            }
            
            .review-text {
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <div class="review-slider-container">
        <div class="review-header-main" id="review-header">
            <h1 style="margin: 0; text-align:center;">What Our Customers Say</h1>
            <p style="margin: 0; text-align:center;">Discover why our customers love our products and services</p>
        </div>

        <div class="review-slider" id="dynamic-reviews">
            <div>
                <div class="loading-spinner">
                    <div class="spinner"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function() {
            const dynamicReviewsContainer = $('#dynamic-reviews');
            const reviewHeader = $('#review-header');

            // Fetch dynamic reviews from API
            fetchReviews();

            async function fetchReviews() {
                try {
                    // Replace these placeholders with your actual values
                    const shopName = "{{ shop.metafields.shopName.shopName }}";
                    const productId = "{{ product.id }}";
                    const API_ENDPOINT = `https://checklist.codecrewinfotech.com/api/getReview/${shopName}/${productId}`;
                    
                    const response = await fetch(API_ENDPOINT, {
                        method: 'GET',
                        headers: { 
                            'ngrok-skip-browser-warning': true,
                            'Content-Type': 'application/json'
                        },
                    });
                    
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    
                    const reviews = await response.json();
                    
                    if (!reviews || !reviews.reviews || reviews.reviews.length === 0) {
                        reviewHeader.addClass('hidden');
                        dynamicReviewsContainer.addClass('hidden');
                        return;
                    }

                    reviewHeader.removeClass('hidden');
                    dynamicReviewsContainer.removeClass('hidden');

                    renderReviews(reviews.reviews);

                } catch (error) {
                    console.error('Error fetching reviews:', error);
                    dynamicReviewsContainer.html('<div class="error-message">Unable to load reviews at this time</div>');
                }
            }

            function renderReviews(reviews) {
                // Clear existing content
                dynamicReviewsContainer.html('');

                // Build HTML string for better performance
                let reviewsHtml = '';
                reviews.forEach((review) => {
                    const stars = '★'.repeat(review.rating || 0) + '☆'.repeat(5 - (review.rating || 0));
                    reviewsHtml += `
                    <div class="review-list">
                        <div class="review-card">
                          <div class="Date">
                        <h3 class="review-author">${review.name || 'Anonymous'}</h3>
                             <div>  <h3 class="review-date">${review.date }</h3></div>
                          </div>
                          </div>
                            <div class="review-rating">${stars}</div>
                            <p class="review-text">${review.reviewText || 'No comment provided'}</p>
                         </div>
                         
                    `;
                });

                // Add all content at once
                dynamicReviewsContainer.html(reviewsHtml);

                // Mark as loaded to show the reviews
                dynamicReviewsContainer.addClass('loaded');
            }
        });
    </script>
</body>
</html>